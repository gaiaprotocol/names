"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunknames"] = self["webpackChunknames"] || []).push([["node_modules_ionic_core_dist_esm_ion-segment-view_entry_js"],{

/***/ "./node_modules/@ionic/core/dist/esm/ion-segment-view.entry.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@ionic/core/dist/esm/ion-segment-view.entry.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ion_segment_view: () => (/* binding */ SegmentView)\n/* harmony export */ });\n/* harmony import */ var _index_4DxY6_gG_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-4DxY6_gG.js */ \"./node_modules/@ionic/core/dist/esm/index-4DxY6_gG.js\");\n/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\n\n\nconst segmentViewIosCss = \":host{display:-ms-flexbox;display:flex;height:100%;overflow-x:scroll;-webkit-scroll-snap-type:x mandatory;-ms-scroll-snap-type:x mandatory;scroll-snap-type:x mandatory;scrollbar-width:none;-ms-overflow-style:none}:host::-webkit-scrollbar{display:none}:host(.segment-view-disabled){-ms-touch-action:none;touch-action:none;overflow-x:hidden}:host(.segment-view-scroll-disabled){pointer-events:none}:host(.segment-view-disabled){opacity:0.3}\";\n\nconst segmentViewMdCss = \":host{display:-ms-flexbox;display:flex;height:100%;overflow-x:scroll;-webkit-scroll-snap-type:x mandatory;-ms-scroll-snap-type:x mandatory;scroll-snap-type:x mandatory;scrollbar-width:none;-ms-overflow-style:none}:host::-webkit-scrollbar{display:none}:host(.segment-view-disabled){-ms-touch-action:none;touch-action:none;overflow-x:hidden}:host(.segment-view-scroll-disabled){pointer-events:none}:host(.segment-view-disabled){opacity:0.3}\";\n\nconst SegmentView = class {\n    constructor(hostRef) {\n        (0,_index_4DxY6_gG_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);\n        this.ionSegmentViewScroll = (0,_index_4DxY6_gG_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, \"ionSegmentViewScroll\", 7);\n        this.scrollEndTimeout = null;\n        this.isTouching = false;\n        /**\n         * If `true`, the segment view cannot be interacted with.\n         */\n        this.disabled = false;\n    }\n    handleScroll(ev) {\n        var _a;\n        const { scrollLeft, scrollWidth, clientWidth } = ev.target;\n        const scrollRatio = scrollLeft / (scrollWidth - clientWidth);\n        this.ionSegmentViewScroll.emit({\n            scrollRatio,\n            isManualScroll: (_a = this.isManualScroll) !== null && _a !== void 0 ? _a : true,\n        });\n        // Reset the timeout to check for scroll end\n        this.resetScrollEndTimeout();\n    }\n    /**\n     * Handle touch start event to know when the user is actively dragging the segment view.\n     */\n    handleScrollStart() {\n        if (this.scrollEndTimeout) {\n            clearTimeout(this.scrollEndTimeout);\n            this.scrollEndTimeout = null;\n        }\n        this.isTouching = true;\n    }\n    /**\n     * Handle touch end event to know when the user is no longer dragging the segment view.\n     */\n    handleTouchEnd() {\n        this.isTouching = false;\n    }\n    /**\n     * Reset the scroll end detection timer. This is called on every scroll event.\n     */\n    resetScrollEndTimeout() {\n        if (this.scrollEndTimeout) {\n            clearTimeout(this.scrollEndTimeout);\n            this.scrollEndTimeout = null;\n        }\n        this.scrollEndTimeout = setTimeout(() => {\n            this.checkForScrollEnd();\n        }, \n        // Setting this to a lower value may result in inconsistencies in behavior\n        // across browsers (particularly Firefox).\n        // Ideally, all of this logic is removed once the scroll end event is\n        // supported on all browsers (https://caniuse.com/?search=scrollend)\n        100);\n    }\n    /**\n     * Check if the scroll has ended and the user is not actively touching.\n     * If the conditions are met (active content is enabled and no active touch),\n     * reset the scroll position and emit the scroll end event.\n     */\n    checkForScrollEnd() {\n        // Only emit scroll end event if the active content is not disabled and\n        // the user is not touching the segment view\n        if (!this.isTouching) {\n            this.isManualScroll = undefined;\n        }\n    }\n    /**\n     * @internal\n     *\n     * This method is used to programmatically set the displayed segment content\n     * in the segment view. Calling this method will update the `value` of the\n     * corresponding segment button.\n     *\n     * @param id: The id of the segment content to display.\n     * @param smoothScroll: Whether to animate the scroll transition.\n     */\n    async setContent(id, smoothScroll = true) {\n        const contents = this.getSegmentContents();\n        const index = contents.findIndex((content) => content.id === id);\n        if (index === -1)\n            return;\n        this.isManualScroll = false;\n        this.resetScrollEndTimeout();\n        const contentWidth = this.el.offsetWidth;\n        this.el.scrollTo({\n            top: 0,\n            left: index * contentWidth,\n            behavior: smoothScroll ? 'smooth' : 'instant',\n        });\n    }\n    getSegmentContents() {\n        return Array.from(this.el.querySelectorAll('ion-segment-content'));\n    }\n    render() {\n        const { disabled, isManualScroll } = this;\n        return ((0,_index_4DxY6_gG_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_4DxY6_gG_js__WEBPACK_IMPORTED_MODULE_0__.d, { key: '754a374e89fd4dd682eb00497e717242a6f83357', class: {\n                'segment-view-disabled': disabled,\n                'segment-view-scroll-disabled': isManualScroll === false,\n            } }, (0,_index_4DxY6_gG_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"slot\", { key: '77366044eb61f0d4bba305bd6f0ef8fd1e25194b' })));\n    }\n    get el() { return (0,_index_4DxY6_gG_js__WEBPACK_IMPORTED_MODULE_0__.g)(this); }\n};\nSegmentView.style = {\n    ios: segmentViewIosCss,\n    md: segmentViewMdCss\n};\n\n\n\n\n//# sourceURL=webpack://names/./node_modules/@ionic/core/dist/esm/ion-segment-view.entry.js?\n}");

/***/ })

}]);